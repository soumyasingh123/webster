<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Rap Battles</title>
  <style>* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
}

body {
    position: relative;
    font-family: 'Poppins', sans-serif;
    color: #3B3030;
}

body::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url('/battletogo - Copy.jpg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    opacity: 0.1;
    z-index: -1;
}

.btnLogin-popup {
    margin-top: 10px;
    margin-left: 5px;
    width: 130px;
    height: 50px;
    background: transparent;
    border: 2px solid #3B3030;
    outline: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 1.1rem;
    color: #3B3030;
    font-weight: 500;
    margin-right: 40px;
    transition: .5s;
}

.btnLogin-popup:hover {
    background: #3B3030;
    color: white;
}

.create {
    width: 100%;
    height: auto;
    display: flex;
    justify-content: center;
    flex-direction: row;
    gap: 50px;
}

.create h1 {
    font-family: Tahoma;
    font-style: italic;
    font-size: 4rem;
    color: #3B3030;
}

.create #createBattleButton {
    background-color: #FFF0D1;
}

.create #createBattleButton:hover {
    background-color: #3B3030;
    color: #FFF0D1;
}

#createBattleForm {
    margin-top: 80px;
    width: 100%;
    height: auto;
    display: flex;
    flex-direction: row;
    justify-content: center;

}

#createBattleForm h2 {
    font-family: Tahoma;
    font-style: italic;
    font-size: 3rem;
    color: #3B3030;
}

#createBattleForm form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 20px;
    margin-left: 30px;
}

#createBattleForm label {
    font-weight: bold;
    font-size: 20px;
    color: #3B3030;
}

#createBattleForm input {
    height: 30px;
    border-color: #3B3030;
    border-width: 3px;
}

#createBattleForm button {
    margin-top: 10px;
    margin-left: 5px;
    width: 130px;
    height: 30px;
    background: #FFF0D1;
    border: 2px solid #3B3030;
    outline: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 1.1rem;
    color: #3B3030;
    font-weight: 500;
    margin-right: 40px;
    transition: .5s;
}

#createBattleForm button:hover {
    background: #3B3030;
    color: white;
}

#battleRequestsSection {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

#battleRequestsSection h2 {
    font-family: Tahoma;
    font-style: italic;
    font-size: 3rem;
    color: #3B3030;
    margin-top: 60px;
}

.battleRequest {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

.battleRequest h3 {
    margin-top: 20px;
    font-size: 25px;
}

.battleRequest button {
    margin-top: 20px;
    margin-left: 30px;
    width: 100px;
    height: 30px;
    background: #FFF0D1;
    border: 2px solid #3B3030;
    outline: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 1.1rem;
    color: #3B3030;
    font-weight: 500;
}

h2 {
    text-align: center;
    font-family: Tahoma;
    font-size: 3rem;
    font-style: italic;
    text-shadow: #FFF0D1;
    color: #3B3030;
    margin-top: 50px;

}

.carousel-container {
    position: relative;
    width: 80%;
    margin: 0 auto;
    overflow: hidden;
}

.carousel-slide {
    display: none;
    text-align: center;
}

.carousel-slide h1,
.carousel-slide h2 {
    font-family: Tahoma;
    font-style: italic;
    color: #3B3030;
}

.carousel-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: #3B3030;
    color: white;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
}

.prev {
    left: 10px;
}

.next {
    right: 10px;
}</style>
</head>
<body>
  <header>
    <a href="back.html">
      <!-- back to where we were -->
      <button class="btnLogin-popup">Back</button>
    </a>
  </header>
  <div class="create">
  <h1>Rap Battles</h1>
 
  <button id="createBattleButton">Create a Battle</button>
</div>

  
  <div id="createBattleForm" style="display:none;">
    <h2>Select Challenger</h2>
    <form id="selectChallengerForm" action="/battles/create" method="POST">
      <label for="challengerUsername">Enter Username:</label>
      <input type="text" id="challengerUsername" name="challengerUsername" required>
      <button type="submit">Send Challenge</button>
    </form>
    <p id="battleMessage"></p>
  </div>

  <% if (locals.messages && messages.length > 0) { %>
    <div id="battleDetails">
      <h2>Battle Requests</h2>
      <% messages.forEach(message => { %>
        <div class="battleRequest">
          <h3>Battle Request from <span id="challengerName"><%= message.user_id %></span></h3>
          <button class="acceptBattleButton" data-id="<%=message.id %>">Accept</button>
          <button class="declineBattleButton" data-id="<%= message.id %>">Decline</button>
        </div>
      <% }); %>
      
      </div>
    </div>
  <% } else { %>
    <p>No battle requests at the moment.</p>
  <% } %>
  <h2>Your Battles</h2>
  <% if (locals.yourBattles && yourBattles.length > 0) { %>
    <div id="battleDetails">
      <h2>Battle Requests</h2>
      <% yourBattles.forEach(battle => { %>
        <div class="battleRequest">
          <a href="/arena/<%= battle.id %>">
            <button class="acceptBattleButton">Go to Arena</button>
          </a>
       
        </div>
      <% }); %>
       
      </div>
    </div>
  <% } else { %>
    <p>No Battles.</p>
  <% } %>
  <h2>Other Battles</h2>
  <% if(locals.ohterBattles) {%>
    <% otherBattles.forEach(battle=>{ %>
        <form action="/arena/<%= battle.id %>"><button type="submit" >enter the arena</button></form>
      <% }); %>
    <% } %>
  <script>
    // Handle accepting or declining challenges
    document.addEventListener('click', async function(event) {
      if (event.target.classList.contains('acceptBattleButton')) {
        const battleId = event.target.dataset.id;
        try {
          const response = await fetch(`/battles/${battleId}/accept`, { method: 'POST' });
          const data = await response.json();
          if (data.arenaUrl) {
            window.location.href = data.arenaUrl;
          } else {
            alert(data.message);
          }
        } catch (error) {
          console.error('Error:', error);
        }
      }
      if (event.target.classList.contains('declineBattleButton')) {
        const battleId = event.target.dataset.id;
        try {
          const response = await fetch(`/battles/${battleId}/decline`, { method: 'POST' });
          const data = await response.json();
          alert(data.message);
          // Optionally refresh the page or update the UI
        } catch (error) {
          console.error('Error:', error);
        }
      }
    });
    document.getElementById('createBattleButton').addEventListener('click', function() {
        // Toggle the display of the createBattleForm
        const battleForm = document.getElementById('createBattleForm');
        if (battleForm.style.display === 'none') {
            battleForm.style.display = 'block'; // Show the form
        } else {
            battleForm.style.display = 'none'; // Hide the form
        }
    });
    
  
  </script>
  
</body>
</html>
